
lab 1 final compe 375.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00000862  000008f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000862  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800116  00800116  0000090c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000090c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000093c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  0000097c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000195c  00000000  00000000  000009bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a16  00000000  00000000  00002318  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000680  00000000  00000000  00002d2e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000088  00000000  00000000  000033b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004d8  00000000  00000000  00003438  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001fc  00000000  00000000  00003910  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00003b0c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e2 e6       	ldi	r30, 0x62	; 98
  c8:	f8 e0       	ldi	r31, 0x08	; 8
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a6 31       	cpi	r26, 0x16	; 22
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a6 e1       	ldi	r26, 0x16	; 22
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	aa 31       	cpi	r26, 0x1A	; 26
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 12 04 	call	0x824	; 0x824 <main>
  ea:	0c 94 2f 04 	jmp	0x85e	; 0x85e <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <dot>:
#include <util/delay.h>

int i, j; 

void dot(){
	PORTB |= (1<<PORTB5);
  f2:	85 b1       	in	r24, 0x05	; 5
  f4:	80 62       	ori	r24, 0x20	; 32
  f6:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f8:	2f ef       	ldi	r18, 0xFF	; 255
  fa:	83 ec       	ldi	r24, 0xC3	; 195
  fc:	99 e0       	ldi	r25, 0x09	; 9
  fe:	21 50       	subi	r18, 0x01	; 1
 100:	80 40       	sbci	r24, 0x00	; 0
 102:	90 40       	sbci	r25, 0x00	; 0
 104:	e1 f7       	brne	.-8      	; 0xfe <dot+0xc>
 106:	00 c0       	rjmp	.+0      	; 0x108 <dot+0x16>
 108:	00 00       	nop
 10a:	08 95       	ret

0000010c <dash>:
	_delay_ms(200);
}


void dash(){
	PORTB |= (1<<PORTB5);
 10c:	85 b1       	in	r24, 0x05	; 5
 10e:	80 62       	ori	r24, 0x20	; 32
 110:	85 b9       	out	0x05, r24	; 5
 112:	2f ef       	ldi	r18, 0xFF	; 255
 114:	8b e4       	ldi	r24, 0x4B	; 75
 116:	9d e1       	ldi	r25, 0x1D	; 29
 118:	21 50       	subi	r18, 0x01	; 1
 11a:	80 40       	sbci	r24, 0x00	; 0
 11c:	90 40       	sbci	r25, 0x00	; 0
 11e:	e1 f7       	brne	.-8      	; 0x118 <dash+0xc>
 120:	00 c0       	rjmp	.+0      	; 0x122 <dash+0x16>
 122:	00 00       	nop
 124:	08 95       	ret

00000126 <spc>:
	_delay_ms(600);
}


void spc(int units){
 126:	ac 01       	movw	r20, r24
	for (j = 0; j < units; j++){
 128:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <__data_end+0x1>
 12c:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <__data_end>
 130:	16 c0       	rjmp	.+44     	; 0x15e <spc+0x38>
		PORTB &= ~(1<<PORTB5);
 132:	95 b1       	in	r25, 0x05	; 5
 134:	9f 7d       	andi	r25, 0xDF	; 223
 136:	95 b9       	out	0x05, r25	; 5
 138:	2f ef       	ldi	r18, 0xFF	; 255
 13a:	83 ec       	ldi	r24, 0xC3	; 195
 13c:	99 e0       	ldi	r25, 0x09	; 9
 13e:	21 50       	subi	r18, 0x01	; 1
 140:	80 40       	sbci	r24, 0x00	; 0
 142:	90 40       	sbci	r25, 0x00	; 0
 144:	e1 f7       	brne	.-8      	; 0x13e <spc+0x18>
 146:	00 c0       	rjmp	.+0      	; 0x148 <spc+0x22>
 148:	00 00       	nop
	_delay_ms(600);
}


void spc(int units){
	for (j = 0; j < units; j++){
 14a:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <__data_end>
 14e:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <__data_end+0x1>
 152:	2f 5f       	subi	r18, 0xFF	; 255
 154:	3f 4f       	sbci	r19, 0xFF	; 255
 156:	30 93 17 01 	sts	0x0117, r19	; 0x800117 <__data_end+0x1>
 15a:	20 93 16 01 	sts	0x0116, r18	; 0x800116 <__data_end>
 15e:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <__data_end>
 162:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <__data_end+0x1>
 166:	24 17       	cp	r18, r20
 168:	35 07       	cpc	r19, r21
 16a:	1c f3       	brlt	.-58     	; 0x132 <spc+0xc>
		PORTB &= ~(1<<PORTB5);
		_delay_ms(200);     //spc btwn dot/dash of same letter is 1 unit
							//spc btwn different letters is 3 units
							//spc between words is 7 units
	}
}
 16c:	08 95       	ret

0000016e <output>:




void output(char input[], int size){
 16e:	0f 93       	push	r16
 170:	1f 93       	push	r17
 172:	cf 93       	push	r28
 174:	df 93       	push	r29
 176:	8c 01       	movw	r16, r24
 178:	eb 01       	movw	r28, r22
	//int same = 0; //if it is the same letter or number twice, is there a need for a space?
	//int space = 0;
	for(i = 0; i < size; i++){
 17a:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <i+0x1>
 17e:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <i>
 182:	3f c3       	rjmp	.+1662   	; 0x802 <__DATA_REGION_LENGTH__+0x2>
		if(input[i] == 'a' || input[i] == 'A'){
 184:	f8 01       	movw	r30, r16
 186:	e8 0f       	add	r30, r24
 188:	f9 1f       	adc	r31, r25
 18a:	80 81       	ld	r24, Z
 18c:	81 36       	cpi	r24, 0x61	; 97
 18e:	11 f0       	breq	.+4      	; 0x194 <output+0x26>
 190:	81 34       	cpi	r24, 0x41	; 65
 192:	49 f4       	brne	.+18     	; 0x1a6 <output+0x38>
			dot();spc(1);dash();
 194:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 1a0:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 1a4:	21 c3       	rjmp	.+1602   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'b' || input[i] == 'B'){
 1a6:	82 36       	cpi	r24, 0x62	; 98
 1a8:	11 f0       	breq	.+4      	; 0x1ae <output+0x40>
 1aa:	82 34       	cpi	r24, 0x42	; 66
 1ac:	a9 f4       	brne	.+42     	; 0x1d8 <output+0x6a>
			dash();spc(1);dot();spc(1);dot();spc(1);dot();
 1ae:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 1ba:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 1c6:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 1d2:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 1d6:	08 c3       	rjmp	.+1552   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'c' || input[i] == 'C'){
 1d8:	83 36       	cpi	r24, 0x63	; 99
 1da:	11 f0       	breq	.+4      	; 0x1e0 <output+0x72>
 1dc:	83 34       	cpi	r24, 0x43	; 67
 1de:	a9 f4       	brne	.+42     	; 0x20a <output+0x9c>
			dash();spc(1);dot();spc(1);dash();spc(1);dot();
 1e0:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 1ec:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 1f8:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 204:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 208:	ef c2       	rjmp	.+1502   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'd' || input[i] == 'D'){
 20a:	84 36       	cpi	r24, 0x64	; 100
 20c:	11 f0       	breq	.+4      	; 0x212 <output+0xa4>
 20e:	84 34       	cpi	r24, 0x44	; 68
 210:	79 f4       	brne	.+30     	; 0x230 <output+0xc2>
			dash();spc(1);dot();spc(1);dot();
 212:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 21e:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 22a:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 22e:	dc c2       	rjmp	.+1464   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'e' || input[i] == 'E'){
 230:	85 36       	cpi	r24, 0x65	; 101
 232:	11 f0       	breq	.+4      	; 0x238 <output+0xca>
 234:	85 34       	cpi	r24, 0x45	; 69
 236:	19 f4       	brne	.+6      	; 0x23e <output+0xd0>
			dot();
 238:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 23c:	d5 c2       	rjmp	.+1450   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'f' || input[i] == 'F'){
 23e:	86 36       	cpi	r24, 0x66	; 102
 240:	11 f0       	breq	.+4      	; 0x246 <output+0xd8>
 242:	86 34       	cpi	r24, 0x46	; 70
 244:	a9 f4       	brne	.+42     	; 0x270 <output+0x102>
			dot();spc(1);dot();spc(1);dash();spc(1);dot();
 246:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 252:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 25e:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 26a:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 26e:	bc c2       	rjmp	.+1400   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'g' || input[i] == 'G'){
 270:	87 36       	cpi	r24, 0x67	; 103
 272:	11 f0       	breq	.+4      	; 0x278 <output+0x10a>
 274:	87 34       	cpi	r24, 0x47	; 71
 276:	79 f4       	brne	.+30     	; 0x296 <output+0x128>
			dash();spc(1);dash();spc(1);dot();
 278:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 284:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 290:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 294:	a9 c2       	rjmp	.+1362   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'h' || input[i] == 'H'){
 296:	88 36       	cpi	r24, 0x68	; 104
 298:	11 f0       	breq	.+4      	; 0x29e <output+0x130>
 29a:	88 34       	cpi	r24, 0x48	; 72
 29c:	a9 f4       	brne	.+42     	; 0x2c8 <output+0x15a>
			dot();spc(1);dot();spc(1);dot();spc(1);dot();
 29e:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 2aa:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 2b6:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 2c2:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 2c6:	90 c2       	rjmp	.+1312   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'i' || input[i] == 'I'){
 2c8:	89 36       	cpi	r24, 0x69	; 105
 2ca:	11 f0       	breq	.+4      	; 0x2d0 <output+0x162>
 2cc:	89 34       	cpi	r24, 0x49	; 73
 2ce:	49 f4       	brne	.+18     	; 0x2e2 <output+0x174>
			dot();spc(1);dot();
 2d0:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 2d4:	81 e0       	ldi	r24, 0x01	; 1
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 2dc:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 2e0:	83 c2       	rjmp	.+1286   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'j' || input[i] == 'J'){
 2e2:	8a 36       	cpi	r24, 0x6A	; 106
 2e4:	11 f0       	breq	.+4      	; 0x2ea <output+0x17c>
 2e6:	8a 34       	cpi	r24, 0x4A	; 74
 2e8:	a9 f4       	brne	.+42     	; 0x314 <output+0x1a6>
			dot();spc(1);dash();spc(1);dash();spc(1);dash();
 2ea:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 2f6:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 302:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 30e:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 312:	6a c2       	rjmp	.+1236   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'k' || input[i] == 'K'){
 314:	8b 36       	cpi	r24, 0x6B	; 107
 316:	11 f0       	breq	.+4      	; 0x31c <output+0x1ae>
 318:	8b 34       	cpi	r24, 0x4B	; 75
 31a:	79 f4       	brne	.+30     	; 0x33a <output+0x1cc>
			dash();spc(1);dot();spc(1);dash();
 31c:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 328:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 334:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 338:	57 c2       	rjmp	.+1198   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'l' || input[i] == 'L'){
 33a:	8c 36       	cpi	r24, 0x6C	; 108
 33c:	11 f0       	breq	.+4      	; 0x342 <output+0x1d4>
 33e:	8c 34       	cpi	r24, 0x4C	; 76
 340:	a9 f4       	brne	.+42     	; 0x36c <output+0x1fe>
			dot();spc(1);dash();spc(1);dot();spc(1);dot();
 342:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 34e:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 35a:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 366:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 36a:	3e c2       	rjmp	.+1148   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'm' || input[i] == 'M'){
 36c:	8d 36       	cpi	r24, 0x6D	; 109
 36e:	11 f0       	breq	.+4      	; 0x374 <output+0x206>
 370:	8d 34       	cpi	r24, 0x4D	; 77
 372:	49 f4       	brne	.+18     	; 0x386 <output+0x218>
			dash();spc(1);dash();
 374:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 380:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 384:	31 c2       	rjmp	.+1122   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'n' || input[i] == 'N'){
 386:	8e 36       	cpi	r24, 0x6E	; 110
 388:	11 f0       	breq	.+4      	; 0x38e <output+0x220>
 38a:	8e 34       	cpi	r24, 0x4E	; 78
 38c:	49 f4       	brne	.+18     	; 0x3a0 <output+0x232>
			dash();spc(1);dot();
 38e:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 39a:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 39e:	24 c2       	rjmp	.+1096   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'o' || input[i] == 'O'){
 3a0:	8f 36       	cpi	r24, 0x6F	; 111
 3a2:	11 f0       	breq	.+4      	; 0x3a8 <output+0x23a>
 3a4:	8f 34       	cpi	r24, 0x4F	; 79
 3a6:	79 f4       	brne	.+30     	; 0x3c6 <output+0x258>
			dash();spc(1);dash();spc(1);dash();
 3a8:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 3b4:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 3c0:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 3c4:	11 c2       	rjmp	.+1058   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'p' || input[i] == 'P'){
 3c6:	80 37       	cpi	r24, 0x70	; 112
 3c8:	11 f0       	breq	.+4      	; 0x3ce <output+0x260>
 3ca:	80 35       	cpi	r24, 0x50	; 80
 3cc:	a9 f4       	brne	.+42     	; 0x3f8 <output+0x28a>
			dot();spc(1);dash();spc(1);dash();spc(1);dot();
 3ce:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 3da:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 3de:	81 e0       	ldi	r24, 0x01	; 1
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 3e6:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 3ea:	81 e0       	ldi	r24, 0x01	; 1
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 3f2:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 3f6:	f8 c1       	rjmp	.+1008   	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'q' || input[i] == 'Q'){
 3f8:	81 37       	cpi	r24, 0x71	; 113
 3fa:	11 f0       	breq	.+4      	; 0x400 <__EEPROM_REGION_LENGTH__>
 3fc:	81 35       	cpi	r24, 0x51	; 81
 3fe:	a9 f4       	brne	.+42     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
			dash();spc(1);dash();spc(1);dot();spc(1);dash();
 400:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 40c:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 418:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 424:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 428:	df c1       	rjmp	.+958    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'r' || input[i] == 'R'){
 42a:	82 37       	cpi	r24, 0x72	; 114
 42c:	11 f0       	breq	.+4      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 42e:	82 35       	cpi	r24, 0x52	; 82
 430:	79 f4       	brne	.+30     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
			dot();spc(1);dash();spc(1);dot();
 432:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 436:	81 e0       	ldi	r24, 0x01	; 1
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 43e:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 44a:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 44e:	cc c1       	rjmp	.+920    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 's' || input[i] == 'S'){
 450:	83 37       	cpi	r24, 0x73	; 115
 452:	11 f0       	breq	.+4      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 454:	83 35       	cpi	r24, 0x53	; 83
 456:	79 f4       	brne	.+30     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
			dot();spc(1);dot();spc(1);dot();
 458:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 464:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 468:	81 e0       	ldi	r24, 0x01	; 1
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 470:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 474:	b9 c1       	rjmp	.+882    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 't' || input[i] == 'T'){
 476:	84 37       	cpi	r24, 0x74	; 116
 478:	11 f0       	breq	.+4      	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 47a:	84 35       	cpi	r24, 0x54	; 84
 47c:	19 f4       	brne	.+6      	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
			dash();
 47e:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 482:	b2 c1       	rjmp	.+868    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'u' || input[i] == 'U'){
 484:	85 37       	cpi	r24, 0x75	; 117
 486:	11 f0       	breq	.+4      	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 488:	85 35       	cpi	r24, 0x55	; 85
 48a:	79 f4       	brne	.+30     	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
			dot();spc(1);dot();spc(1);dash();
 48c:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 490:	81 e0       	ldi	r24, 0x01	; 1
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 498:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 49c:	81 e0       	ldi	r24, 0x01	; 1
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 4a4:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 4a8:	9f c1       	rjmp	.+830    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'v' || input[i] == 'V'){
 4aa:	86 37       	cpi	r24, 0x76	; 118
 4ac:	11 f0       	breq	.+4      	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
 4ae:	86 35       	cpi	r24, 0x56	; 86
 4b0:	a9 f4       	brne	.+42     	; 0x4dc <__EEPROM_REGION_LENGTH__+0xdc>
			dot();spc(1);dot();spc(1);dot();spc(1);dash();
 4b2:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 4be:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 4c2:	81 e0       	ldi	r24, 0x01	; 1
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 4ca:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 4ce:	81 e0       	ldi	r24, 0x01	; 1
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 4d6:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 4da:	86 c1       	rjmp	.+780    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'w' || input[i] == 'W'){
 4dc:	87 37       	cpi	r24, 0x77	; 119
 4de:	11 f0       	breq	.+4      	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 4e0:	87 35       	cpi	r24, 0x57	; 87
 4e2:	79 f4       	brne	.+30     	; 0x502 <__EEPROM_REGION_LENGTH__+0x102>
			dot();spc(1);dash();spc(1);dash();
 4e4:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 4e8:	81 e0       	ldi	r24, 0x01	; 1
 4ea:	90 e0       	ldi	r25, 0x00	; 0
 4ec:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 4f0:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 4f4:	81 e0       	ldi	r24, 0x01	; 1
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 4fc:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 500:	73 c1       	rjmp	.+742    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'x' || input[i] == 'X'){
 502:	88 37       	cpi	r24, 0x78	; 120
 504:	11 f0       	breq	.+4      	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
 506:	88 35       	cpi	r24, 0x58	; 88
 508:	a9 f4       	brne	.+42     	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
			dash();spc(1);dot();spc(1);dot();spc(1);dash();
 50a:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 50e:	81 e0       	ldi	r24, 0x01	; 1
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 516:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 51a:	81 e0       	ldi	r24, 0x01	; 1
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 522:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 526:	81 e0       	ldi	r24, 0x01	; 1
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 52e:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 532:	5a c1       	rjmp	.+692    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'y' || input[i] == 'Y'){
 534:	89 37       	cpi	r24, 0x79	; 121
 536:	11 f0       	breq	.+4      	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
 538:	89 35       	cpi	r24, 0x59	; 89
 53a:	a9 f4       	brne	.+42     	; 0x566 <__EEPROM_REGION_LENGTH__+0x166>
			dash();spc(1);dot();spc(1);dash();spc(1);dash();
 53c:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 540:	81 e0       	ldi	r24, 0x01	; 1
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 548:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 54c:	81 e0       	ldi	r24, 0x01	; 1
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 554:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 558:	81 e0       	ldi	r24, 0x01	; 1
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 560:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 564:	41 c1       	rjmp	.+642    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == 'z' || input[i] == 'Z'){
 566:	8a 37       	cpi	r24, 0x7A	; 122
 568:	11 f0       	breq	.+4      	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 56a:	8a 35       	cpi	r24, 0x5A	; 90
 56c:	a9 f4       	brne	.+42     	; 0x598 <__EEPROM_REGION_LENGTH__+0x198>
			dash();spc(1);dash();spc(1);dot();spc(1);dot();
 56e:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 572:	81 e0       	ldi	r24, 0x01	; 1
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 57a:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 57e:	81 e0       	ldi	r24, 0x01	; 1
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 586:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 58a:	81 e0       	ldi	r24, 0x01	; 1
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 592:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 596:	28 c1       	rjmp	.+592    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == '1'){
 598:	81 33       	cpi	r24, 0x31	; 49
 59a:	d9 f4       	brne	.+54     	; 0x5d2 <__EEPROM_REGION_LENGTH__+0x1d2>
			dot();spc(1);dash();spc(1);dash();spc(1);dash();spc(1);dash();
 59c:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 5a0:	81 e0       	ldi	r24, 0x01	; 1
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 5a8:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 5ac:	81 e0       	ldi	r24, 0x01	; 1
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 5b4:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 5b8:	81 e0       	ldi	r24, 0x01	; 1
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 5c0:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 5c4:	81 e0       	ldi	r24, 0x01	; 1
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 5cc:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 5d0:	0b c1       	rjmp	.+534    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == '2'){
 5d2:	82 33       	cpi	r24, 0x32	; 50
 5d4:	d9 f4       	brne	.+54     	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
			dot();spc(1);dot();spc(1);dash();spc(1);dash();spc(1);dash();
 5d6:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 5da:	81 e0       	ldi	r24, 0x01	; 1
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 5e2:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 5e6:	81 e0       	ldi	r24, 0x01	; 1
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 5ee:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 5f2:	81 e0       	ldi	r24, 0x01	; 1
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 5fa:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 5fe:	81 e0       	ldi	r24, 0x01	; 1
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 606:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 60a:	ee c0       	rjmp	.+476    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == '3'){
 60c:	83 33       	cpi	r24, 0x33	; 51
 60e:	d9 f4       	brne	.+54     	; 0x646 <__EEPROM_REGION_LENGTH__+0x246>
			dot();spc(1);dot();spc(1);dot();spc(1);dash();spc(1);dash();
 610:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 614:	81 e0       	ldi	r24, 0x01	; 1
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 61c:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 620:	81 e0       	ldi	r24, 0x01	; 1
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 628:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 62c:	81 e0       	ldi	r24, 0x01	; 1
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 634:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 638:	81 e0       	ldi	r24, 0x01	; 1
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 640:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 644:	d1 c0       	rjmp	.+418    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == '4'){
 646:	84 33       	cpi	r24, 0x34	; 52
 648:	d9 f4       	brne	.+54     	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
			dot();spc(1);dot();spc(1);dot();spc(1);dot();spc(1);dash();
 64a:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 64e:	81 e0       	ldi	r24, 0x01	; 1
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 656:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 65a:	81 e0       	ldi	r24, 0x01	; 1
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 662:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 666:	81 e0       	ldi	r24, 0x01	; 1
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 66e:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 672:	81 e0       	ldi	r24, 0x01	; 1
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 67a:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 67e:	b4 c0       	rjmp	.+360    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == '5'){
 680:	85 33       	cpi	r24, 0x35	; 53
 682:	d9 f4       	brne	.+54     	; 0x6ba <__EEPROM_REGION_LENGTH__+0x2ba>
			dot();spc(1);dot();spc(1);dot();spc(1);dot();spc(1);dot();
 684:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 688:	81 e0       	ldi	r24, 0x01	; 1
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 690:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 694:	81 e0       	ldi	r24, 0x01	; 1
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 69c:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 6a0:	81 e0       	ldi	r24, 0x01	; 1
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 6a8:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 6ac:	81 e0       	ldi	r24, 0x01	; 1
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 6b4:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 6b8:	97 c0       	rjmp	.+302    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == '6'){
 6ba:	86 33       	cpi	r24, 0x36	; 54
 6bc:	d9 f4       	brne	.+54     	; 0x6f4 <__EEPROM_REGION_LENGTH__+0x2f4>
			dash();spc(1);dot();spc(1);dot();spc(1);dot();spc(1);dot();
 6be:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 6c2:	81 e0       	ldi	r24, 0x01	; 1
 6c4:	90 e0       	ldi	r25, 0x00	; 0
 6c6:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 6ca:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 6ce:	81 e0       	ldi	r24, 0x01	; 1
 6d0:	90 e0       	ldi	r25, 0x00	; 0
 6d2:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 6d6:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 6da:	81 e0       	ldi	r24, 0x01	; 1
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 6e2:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 6e6:	81 e0       	ldi	r24, 0x01	; 1
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 6ee:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 6f2:	7a c0       	rjmp	.+244    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == '7'){
 6f4:	87 33       	cpi	r24, 0x37	; 55
 6f6:	d9 f4       	brne	.+54     	; 0x72e <__EEPROM_REGION_LENGTH__+0x32e>
			dash();spc(1);dash();spc(1);dot();spc(1);dot();spc(1);dot();
 6f8:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 6fc:	81 e0       	ldi	r24, 0x01	; 1
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 704:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 708:	81 e0       	ldi	r24, 0x01	; 1
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 710:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 714:	81 e0       	ldi	r24, 0x01	; 1
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 71c:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 720:	81 e0       	ldi	r24, 0x01	; 1
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 728:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 72c:	5d c0       	rjmp	.+186    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == '8'){
 72e:	88 33       	cpi	r24, 0x38	; 56
 730:	d9 f4       	brne	.+54     	; 0x768 <__EEPROM_REGION_LENGTH__+0x368>
			dash();spc(1);dash();spc(1);dash();spc(1);dot();spc(1);dot();
 732:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 736:	81 e0       	ldi	r24, 0x01	; 1
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 73e:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 742:	81 e0       	ldi	r24, 0x01	; 1
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 74a:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 74e:	81 e0       	ldi	r24, 0x01	; 1
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 756:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 75a:	81 e0       	ldi	r24, 0x01	; 1
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 762:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 766:	40 c0       	rjmp	.+128    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == '9'){
 768:	89 33       	cpi	r24, 0x39	; 57
 76a:	d9 f4       	brne	.+54     	; 0x7a2 <__EEPROM_REGION_LENGTH__+0x3a2>
			dash();spc(1);dash();spc(1);dash();spc(1);dash();spc(1);dot();
 76c:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 770:	81 e0       	ldi	r24, 0x01	; 1
 772:	90 e0       	ldi	r25, 0x00	; 0
 774:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 778:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 77c:	81 e0       	ldi	r24, 0x01	; 1
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 784:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 788:	81 e0       	ldi	r24, 0x01	; 1
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 790:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 794:	81 e0       	ldi	r24, 0x01	; 1
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 79c:	0e 94 79 00 	call	0xf2	; 0xf2 <dot>
 7a0:	23 c0       	rjmp	.+70     	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == '0'){
 7a2:	80 33       	cpi	r24, 0x30	; 48
 7a4:	d9 f4       	brne	.+54     	; 0x7dc <__EEPROM_REGION_LENGTH__+0x3dc>
			dash();spc(1);dash();spc(1);dash();spc(1);dash();spc(1);dash();
 7a6:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 7aa:	81 e0       	ldi	r24, 0x01	; 1
 7ac:	90 e0       	ldi	r25, 0x00	; 0
 7ae:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 7b2:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 7b6:	81 e0       	ldi	r24, 0x01	; 1
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 7be:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 7c2:	81 e0       	ldi	r24, 0x01	; 1
 7c4:	90 e0       	ldi	r25, 0x00	; 0
 7c6:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 7ca:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 7ce:	81 e0       	ldi	r24, 0x01	; 1
 7d0:	90 e0       	ldi	r25, 0x00	; 0
 7d2:	0e 94 93 00 	call	0x126	; 0x126 <spc>
 7d6:	0e 94 86 00 	call	0x10c	; 0x10c <dash>
 7da:	06 c0       	rjmp	.+12     	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		} else if(input[i] == ' '){
 7dc:	80 32       	cpi	r24, 0x20	; 32
 7de:	21 f4       	brne	.+8      	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
			spc(4); //4 +3 = 7 delay
 7e0:	84 e0       	ldi	r24, 0x04	; 4
 7e2:	90 e0       	ldi	r25, 0x00	; 0
 7e4:	0e 94 93 00 	call	0x126	; 0x126 <spc>
		}
		spc(3);
 7e8:	83 e0       	ldi	r24, 0x03	; 3
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	0e 94 93 00 	call	0x126	; 0x126 <spc>


void output(char input[], int size){
	//int same = 0; //if it is the same letter or number twice, is there a need for a space?
	//int space = 0;
	for(i = 0; i < size; i++){
 7f0:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <i>
 7f4:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <i+0x1>
 7f8:	01 96       	adiw	r24, 0x01	; 1
 7fa:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <i+0x1>
 7fe:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <i>
 802:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <i>
 806:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <i+0x1>
 80a:	8c 17       	cp	r24, r28
 80c:	9d 07       	cpc	r25, r29
 80e:	0c f4       	brge	.+2      	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 810:	b9 cc       	rjmp	.-1678   	; 0x184 <output+0x16>
		} else if(input[i] == ' '){
			spc(4); //4 +3 = 7 delay
		}
		spc(3);
	}
	spc(20);
 812:	84 e1       	ldi	r24, 0x14	; 20
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	0e 94 93 00 	call	0x126	; 0x126 <spc>
}
 81a:	df 91       	pop	r29
 81c:	cf 91       	pop	r28
 81e:	1f 91       	pop	r17
 820:	0f 91       	pop	r16
 822:	08 95       	ret

00000824 <main>:


int main(){
 824:	cf 93       	push	r28
 826:	df 93       	push	r29
 828:	cd b7       	in	r28, 0x3d	; 61
 82a:	de b7       	in	r29, 0x3e	; 62
 82c:	66 97       	sbiw	r28, 0x16	; 22
 82e:	0f b6       	in	r0, 0x3f	; 63
 830:	f8 94       	cli
 832:	de bf       	out	0x3e, r29	; 62
 834:	0f be       	out	0x3f, r0	; 63
 836:	cd bf       	out	0x3d, r28	; 61
	DDRB |= (1<<DDB5);
 838:	84 b1       	in	r24, 0x04	; 4
 83a:	80 62       	ori	r24, 0x20	; 32
 83c:	84 b9       	out	0x04, r24	; 4
	char yes[] = "Laith Oraha 828440295";
 83e:	86 e1       	ldi	r24, 0x16	; 22
 840:	e0 e0       	ldi	r30, 0x00	; 0
 842:	f1 e0       	ldi	r31, 0x01	; 1
 844:	de 01       	movw	r26, r28
 846:	11 96       	adiw	r26, 0x01	; 1
 848:	01 90       	ld	r0, Z+
 84a:	0d 92       	st	X+, r0
 84c:	8a 95       	dec	r24
 84e:	e1 f7       	brne	.-8      	; 0x848 <main+0x24>
	int size = sizeof(yes);
	while(1){
		output(yes, size);
 850:	66 e1       	ldi	r22, 0x16	; 22
 852:	70 e0       	ldi	r23, 0x00	; 0
 854:	ce 01       	movw	r24, r28
 856:	01 96       	adiw	r24, 0x01	; 1
 858:	0e 94 b7 00 	call	0x16e	; 0x16e <output>
 85c:	f9 cf       	rjmp	.-14     	; 0x850 <main+0x2c>

0000085e <_exit>:
 85e:	f8 94       	cli

00000860 <__stop_program>:
 860:	ff cf       	rjmp	.-2      	; 0x860 <__stop_program>

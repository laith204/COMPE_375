
lab 3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  000001a6  0000021a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001a6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000022a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000025c  2**2
                  CONTENTS, READONLY
  4 .debug_info   000008ea  00000000  00000000  0000029c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000086e  00000000  00000000  00000b86  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000001a6  00000000  00000000  000013f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000318  00000000  00000000  0000159a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
   8:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
   c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  10:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  14:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  18:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  1c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  20:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  24:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  28:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  2c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  30:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  34:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  38:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  3c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  40:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  44:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  48:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  4c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  50:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  54:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  58:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  5c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  60:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  64:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  68:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  6c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  70:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  74:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  78:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  7c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  80:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  84:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  88:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  8c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  90:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  94:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  98:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  9c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a0:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a4:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a8:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  ac:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  b0:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e6 ea       	ldi	r30, 0xA6	; 166
  c8:	f1 e0       	ldi	r31, 0x01	; 1
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a0 31       	cpi	r26, 0x10	; 16
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>
  d6:	0e 94 78 00 	call	0xf0	; 0xf0 <main>
  da:	0c 94 d1 00 	jmp	0x1a2	; 0x1a2 <_exit>

000000de <__bad_interrupt>:
  de:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e2 <uart_transmit>:
  e2:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  e6:	95 ff       	sbrs	r25, 5
  e8:	fc cf       	rjmp	.-8      	; 0xe2 <uart_transmit>
  ea:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  ee:	08 95       	ret

000000f0 <main>:
  f0:	cf 93       	push	r28
  f2:	df 93       	push	r29
  f4:	cd b7       	in	r28, 0x3d	; 61
  f6:	de b7       	in	r29, 0x3e	; 62
  f8:	60 97       	sbiw	r28, 0x10	; 16
  fa:	0f b6       	in	r0, 0x3f	; 63
  fc:	f8 94       	cli
  fe:	de bf       	out	0x3e, r29	; 62
 100:	0f be       	out	0x3f, r0	; 63
 102:	cd bf       	out	0x3d, r28	; 61
 104:	80 e1       	ldi	r24, 0x10	; 16
 106:	e0 e0       	ldi	r30, 0x00	; 0
 108:	f1 e0       	ldi	r31, 0x01	; 1
 10a:	de 01       	movw	r26, r28
 10c:	11 96       	adiw	r26, 0x01	; 1
 10e:	01 90       	ld	r0, Z+
 110:	0d 92       	st	X+, r0
 112:	8a 95       	dec	r24
 114:	e1 f7       	brne	.-8      	; 0x10e <main+0x1e>
 116:	88 24       	eor	r8, r8
 118:	83 94       	inc	r8
 11a:	91 2c       	mov	r9, r1
 11c:	ce 01       	movw	r24, r28
 11e:	01 96       	adiw	r24, 0x01	; 1
 120:	5c 01       	movw	r10, r24
 122:	84 e0       	ldi	r24, 0x04	; 4
 124:	e8 2e       	mov	r14, r24
 126:	f1 2c       	mov	r15, r1
 128:	8b b1       	in	r24, 0x0b	; 11
 12a:	64 01       	movw	r12, r8
 12c:	0e 2c       	mov	r0, r14
 12e:	01 c0       	rjmp	.+2      	; 0x132 <main+0x42>
 130:	cc 0c       	add	r12, r12
 132:	0a 94       	dec	r0
 134:	ea f7       	brpl	.-6      	; 0x130 <main+0x40>
 136:	9c 2d       	mov	r25, r12
 138:	90 95       	com	r25
 13a:	89 23       	and	r24, r25
 13c:	8b b9       	out	0x0b, r24	; 11
 13e:	00 e0       	ldi	r16, 0x00	; 0
 140:	10 e0       	ldi	r17, 0x00	; 0
 142:	83 b1       	in	r24, 0x03	; 3
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	00 2e       	mov	r0, r16
 148:	02 c0       	rjmp	.+4      	; 0x14e <main+0x5e>
 14a:	95 95       	asr	r25
 14c:	87 95       	ror	r24
 14e:	0a 94       	dec	r0
 150:	e2 f7       	brpl	.-8      	; 0x14a <main+0x5a>
 152:	80 fd       	sbrc	r24, 0
 154:	06 c0       	rjmp	.+12     	; 0x162 <main+0x72>
 156:	f5 01       	movw	r30, r10
 158:	e0 0f       	add	r30, r16
 15a:	f1 1f       	adc	r31, r17
 15c:	80 81       	ld	r24, Z
 15e:	0e 94 71 00 	call	0xe2	; 0xe2 <uart_transmit>
 162:	94 01       	movw	r18, r8
 164:	00 2e       	mov	r0, r16
 166:	02 c0       	rjmp	.+4      	; 0x16c <main+0x7c>
 168:	22 0f       	add	r18, r18
 16a:	33 1f       	adc	r19, r19
 16c:	0a 94       	dec	r0
 16e:	e2 f7       	brpl	.-8      	; 0x168 <main+0x78>
 170:	83 b1       	in	r24, 0x03	; 3
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	82 23       	and	r24, r18
 176:	93 23       	and	r25, r19
 178:	89 2b       	or	r24, r25
 17a:	d1 f3       	breq	.-12     	; 0x170 <main+0x80>
 17c:	0f 5f       	subi	r16, 0xFF	; 255
 17e:	1f 4f       	sbci	r17, 0xFF	; 255
 180:	04 30       	cpi	r16, 0x04	; 4
 182:	11 05       	cpc	r17, r1
 184:	f1 f6       	brne	.-68     	; 0x142 <main+0x52>
 186:	8b b1       	in	r24, 0x0b	; 11
 188:	c8 2a       	or	r12, r24
 18a:	cb b8       	out	0x0b, r12	; 11
 18c:	9f ef       	ldi	r25, 0xFF	; 255
 18e:	e9 1a       	sub	r14, r25
 190:	f9 0a       	sbc	r15, r25
 192:	84 e0       	ldi	r24, 0x04	; 4
 194:	a8 0e       	add	r10, r24
 196:	b1 1c       	adc	r11, r1
 198:	98 e0       	ldi	r25, 0x08	; 8
 19a:	e9 16       	cp	r14, r25
 19c:	f1 04       	cpc	r15, r1
 19e:	21 f6       	brne	.-120    	; 0x128 <main+0x38>
 1a0:	bd cf       	rjmp	.-134    	; 0x11c <main+0x2c>

000001a2 <_exit>:
 1a2:	f8 94       	cli

000001a4 <__stop_program>:
 1a4:	ff cf       	rjmp	.-2      	; 0x1a4 <__stop_program>
